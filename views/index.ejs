<%- include("./head.ejs") %>

<body>
  <div class="container" style="margin-top: 75px;">
  <h1><%= title %></h1>
  <h4>At this moment, you can:</h4>
  <br />

  <h5>1. Add a bussy hour for an specific user: <strong>(FUNCIONA)</strong></h5>
  <div class="d-flex justify-content-center">
    <%- include("./form_hour.ejs") %>
  </div>

<br>
  <h5>2. Create an empty schedule for an user: <strong>(FUNCIONA)</strong></h5>
  <form action="/schedules/create" method="POST">
    <div class="form-group">
      <input
        type="name"
        name="user"
        class="form-control"
        aria-describedby="emailHelp"
        placeholder="Enter user"
      />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
  </form>

<br>
<br>
<h5>3. Show schedule of a specific user <strong>(NO FUNCIONA)</strong></h5>
<form action="/userschedule" method="POST">
    <div class="form-group">
      <input
        type="name"
        name="user"
        class="form-control"
        aria-describedby="emailHelp"
        placeholder="Enter user"
      />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
  </form>

<br>
<br>
<h5>4. Randerizar en el cliente todas las bussy hours que hay en la base de datos: <strong>(FALTA HACER QUE NO SE CARGUE AUTOMÁTICO SINO LUEGO DE PRESIONAR ALGO. FALTA QUE FILTRE POR PERSONA ESPECÍFICA)</strong></h5>
<br>
<%- include("./view_schedule.ejs") %>

<br>
<br>
<h5>5. <a href="/schedules">Obtener un JSON con todos los schedules.</a> <strong>(FUNCIONA, FALTA FILTRAR POR PERSONA O DÍA)</strong></h5>

<br>
<br>

<h5><strong>6. EL REQUERIMIENTO MÁS IMPORTANTE:</strong></h5>
<h6>Cuando se obtengan los horarios de personas específicas, se hace la función que encuentra huecos.</h6>
</div>

<h5>Borrar horas sirve desde MongoUtils, falta pensar en conectarlo con este index.</h5>
<%- include("./endHTMLpart.ejs") %>
